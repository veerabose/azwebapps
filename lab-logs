[student@workstation ~]$ lab-configure

 . Enter the GitHub account name: veerabose
   Verifying GitHub account name: veerabose

 . Enter the Quay.io account name: veeraabose
   Verifying Quay.io account name: veeraabose

 . Configuring RHT_OCP4_GITHUB_USER variable: SUCCESS
 . Configuring RHT_OCP4_QUAY_USER variable:   SUCCESS

 . To reconfigure, run: lab-configure -d

 . Ensuring user 'developer' can log in to the OpenShift cluster.
Warning: Permanently added 'utility,172.25.250.253' (ECDSA) to the list of known hosts.
ERROR: Cannot currently log in as user kubeadmin.
[student@workstation ~]$ ^C
[student@workstation ~]$ ^C
[student@workstation ~]$ https://github.com/veerabose/DO180-apps.git
bash: https://github.com/veerabose/DO180-apps.git: No such file or directory
[student@workstation ~]$ git clone https://github.com/veerabose/DO180-apps.git
Cloning into 'DO180-apps'...
remote: Enumerating objects: 172, done.
remote: Total 172 (delta 0), reused 0 (delta 0), pack-reused 172
Receiving objects: 100% (172/172), 287.19 KiB | 480.00 KiB/s, done.
Resolving deltas: 100% (70/70), done.
[student@workstation ~]$ ls
Desktop  DO180-apps  Documents  Downloads  Music  Pictures  Public  Templates  Videos
[student@workstation ~]$ cd DO180-apps/
[student@workstation DO180-apps]$ git status
On branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean
[student@workstation DO180-apps]$

[student@workstation DO180-apps]$ git checkout -b testbranch
Switched to a new branch testbranch

[student@workstation DO180-apps]$ git add .
[student@workstation DO180-apps]$ git commit -m "DO180"
[testbranch a2978b1] DO180
 1 file changed, 1 insertion(+)
 create mode 100644 TEST
[student@workstation DO180-apps]$ git push --set-upstream origin testbranch
Gtk-Message: 12:09:29.984: Failed to load module "canberra-gtk-module"
Gtk-Message: 12:09:42.026: Failed to load module "canberra-gtk-module"
remote: No anonymous write access.
fatal: Authentication failed for 'https://github.com/veerabose/DO180-apps.git/'
[student@workstation DO180-apps]$ git push --set-upstream origin testbranch
Gtk-Message: 12:10:00.358: Failed to load module "canberra-gtk-module"
Gtk-Message: 12:10:21.575: Failed to load module "canberra-gtk-module"
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 2 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 285 bytes | 285.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
remote: 
remote: Create a pull request for 'testbranch' on GitHub by visiting:
remote:      https://github.com/veerabose/DO180-apps/pull/new/testbranch
remote: 
To https://github.com/veerabose/DO180-apps.git
 * [new branch]      testbranch -> testbranch
Branch 'testbranch' set up to track remote branch 'testbranch' from 'origin'.
[student@workstation DO180-apps]$ echo "OCP4" > TEST
[student@workstation DO180-apps]$ git add .
[student@workstation DO180-apps]$ git commit -m "OCP4"
[testbranch 00edc58] OCP4
 1 file changed, 1 insertion(+), 1 deletion(-)
[student@workstation DO180-apps]$ git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 2 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 274 bytes | 274.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/veerabose/DO180-apps.git
   a2978b1..00edc58  testbranch -> testbranch
[student@workstation DO180-apps]$ 

----------------------
In this chapter, you learned:
• Containers are isolated application runtimes, created with very little overhead.
• A container image packages an application with all of its dependencies, making it easier to run
the application in different environments.
• Applications such as Podman create containers using features of the standard Linux kernel.
• Container image registries are the preferred mechanism for distributing container images to
multiple users and hosts.
• OpenShift orchestrates applications composed of multiple containers using Kubernetes.
• Kubernetes manages load balancing, high availability, and persistent storage for containerized
applications.
• OpenShift adds to Kubernetes multitenancy, security, ease of use, and continuous integration
and continuous development features.
• OpenShift routes enable external access to containerized applications in a manageable way.

---------------------------------------------

[student@workstation DO180-apps]$ lab container-create start

Setting up workstation for the Guided Exercise: Creating a MySQL database instance

 · Checking podman configuration...............................  SUCCESS
 · Creating create_table.txt file..............................  SUCCESS
[student@workstation DO180-apps]$ podman login registry.redhat.io
Username: veeraabose
Password: 
Login Succeeded!
[student@workstation DO180-apps]$

[student@workstation DO180-apps]$ podman run --name mysql-basic -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 -d registry.redhat.io/rhel8/mysql-80:1
Trying to pull registry.redhat.io/rhel8/mysql-80:1...
Getting image source signatures
Checking if image destination supports signatures
Copying blob 36bead343ed7 done  
Copying blob e556e33d0b40 done  
Copying blob 1b3417e31a5e done  
Copying blob 809fe483e885 done  
Copying config 82eb01fb3a done  
Writing manifest to image destination
Storing signatures
770f4a2f7d0092db37f1ecbee7346ba52d13eb7ef9429259a2db7f5d83b01e24
[student@workstation DO180-apps]$ podman ps --format "{{.ID}} {{.Image}} {{.Names}}"
770f4a2f7d00 registry.redhat.io/rhel8/mysql-80:1 mysql-basic
[student@workstation DO180-apps]$ podman exec -it mysql-basic /bin/bash
bash-4.4$ mysql -uroot
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 8
Server version: 8.0.26 Source distribution

Copyright (c) 2000, 2021, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| items              |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.00 sec)

mysql> USE items;
Database changed
mysql> 
mysql> CREATE TABLE Projects (id int NOT NULL,
    -> name varchar(255) DEFAULT NULL,
    -> code varchar(255) DEFAULT NULL,
    -> PRIMARY KEY (id));
Query OK, 0 rows affected (0.06 sec)

mysql> SHOW TABLES;
+-----------------+
| Tables_in_items |
+-----------------+
| Projects        |
+-----------------+
1 row in set (0.00 sec)

mysql> INSERT INTO Projects (id, name, code) VALUES (1,'DevOps','DO180');
Query OK, 1 row affected (0.02 sec)

mysql> SELECT * FROM Projects;
+----+--------+-------+
| id | name   | code  |
+----+--------+-------+
|  1 | DevOps | DO180 |
+----+--------+-------+
1 row in set (0.00 sec)

mysql>
mysql> exit
Bye
bash-4.4$ exit
exit
[student@workstation DO180-apps]$ 

[student@workstation DO180-apps]$ lab container-create finish

Completing the Guided Exercise: Creating a MySQL database instance

 · Removing "mysql-basic" container............................  SUCCESS
 · Removing "registry.redhat.io/rhel8/mysql-80:1" image........  SUCCESS
[student@workstation DO180-apps]$

Summary
-------------------------------------------
In this chapter, you learned:
• Podman allows users to search for and download images from local or remote registries.
• The podman run command creates and starts a container from a container image.
• Containers are executed in the background by using the -d flag, or interactively by using the -
it flag.
• Some container images require environment variables that are set using the -e option with the
podman run command.
• Red Hat Container Catalog assists in searching, exploring, and analyzing container images from
Red Hat's official container image repository.

----------------------------------------------06Oct2022--------------------------------------------

[student@workstation ~]$ lab manage-lifecycle start

Setting up workstation for the Guided Excercise: Managing a MySQL Container

 · Checking podman configuration...............................  SUCCESS
 · Setting up labs folder......................................  SUCCESS
 · Downloading starter project.................................  SUCCESS
 · Downloading solution project................................  SUCCESS

Setup successful. Please proceed with the exercise.

[student@workstation ~]$ podman login registry.redhat.io
Authenticating with existing credentials for registry.redhat.io
Existing credentials are valid. Already logged in to registry.redhat.io
[student@workstation ~]$ podman run --name mysql-db registry.redhat.io/rhel8/mysql-80:1
Trying to pull registry.redhat.io/rhel8/mysql-80:1...
Getting image source signatures
Checking if image destination supports signatures
Copying blob 36bead343ed7 done  
Copying blob 1b3417e31a5e done  
Copying blob 1770f4614fe5 done  
Copying blob 809fe483e885 done  
Copying config b5b0298033 done  
Writing manifest to image destination
Storing signatures
=> sourcing 20-validate-variables.sh ...
You must either specify the following environment variables:
  MYSQL_USER (regex: '^[a-zA-Z0-9_]+$')
  MYSQL_PASSWORD (regex: '^[a-zA-Z0-9_~!@#$%^&*()-=<>,.?;:|]+$')
  MYSQL_DATABASE (regex: '^[a-zA-Z0-9_]+$')
Or the following environment variable:
  MYSQL_ROOT_PASSWORD (regex: '^[a-zA-Z0-9_~!@#$%^&*()-=<>,.?;:|]+$')
Or both.
Optional Settings:
  MYSQL_LOWER_CASE_TABLE_NAMES (default: 0)
  MYSQL_LOG_QUERIES_ENABLED (default: 0)
  MYSQL_MAX_CONNECTIONS (default: 151)
  MYSQL_FT_MIN_WORD_LEN (default: 4)
  MYSQL_FT_MAX_WORD_LEN (default: 20)
  MYSQL_AIO (default: 1)
  MYSQL_KEY_BUFFER_SIZE (default: 32M or 10% of available memory)
  MYSQL_MAX_ALLOWED_PACKET (default: 200M)
  MYSQL_TABLE_OPEN_CACHE (default: 400)
  MYSQL_SORT_BUFFER_SIZE (default: 256K)
  MYSQL_READ_BUFFER_SIZE (default: 8M or 5% of available memory)
  MYSQL_INNODB_BUFFER_POOL_SIZE (default: 32M or 50% of available memory)
  MYSQL_INNODB_LOG_FILE_SIZE (default: 8M or 15% of available memory)
  MYSQL_INNODB_LOG_BUFFER_SIZE (default: 8M or 15% of available memory)

For more information, see https://github.com/sclorg/mysql-container
[student@workstation ~]$ podman ps 
CONTAINER ID  IMAGE       COMMAND     CREATED     STATUS      PORTS       NAMES
[student@workstation ~]$ podman ps -a
CONTAINER ID  IMAGE                                COMMAND     CREATED         STATUS                     PORTS       NAMES
1004d03199c9  registry.redhat.io/rhel8/mysql-80:1  run-mysqld  50 seconds ago  Exited (1) 51 seconds ago              mysql-db
[student@workstation ~]$ podman logs mysql-db
=> sourcing 20-validate-variables.sh ...
You must either specify the following environment variables:
  MYSQL_USER (regex: '^[a-zA-Z0-9_]+$')
  MYSQL_PASSWORD (regex: '^[a-zA-Z0-9_~!@#$%^&*()-=<>,.?;:|]+$')
  MYSQL_DATABASE (regex: '^[a-zA-Z0-9_]+$')
Or the following environment variable:
  MYSQL_ROOT_PASSWORD (regex: '^[a-zA-Z0-9_~!@#$%^&*()-=<>,.?;:|]+$')
Or both.
Optional Settings:
  MYSQL_LOWER_CASE_TABLE_NAMES (default: 0)
  MYSQL_LOG_QUERIES_ENABLED (default: 0)
  MYSQL_MAX_CONNECTIONS (default: 151)
  MYSQL_FT_MIN_WORD_LEN (default: 4)
  MYSQL_FT_MAX_WORD_LEN (default: 20)
  MYSQL_AIO (default: 1)
  MYSQL_KEY_BUFFER_SIZE (default: 32M or 10% of available memory)
  MYSQL_MAX_ALLOWED_PACKET (default: 200M)
  MYSQL_TABLE_OPEN_CACHE (default: 400)
  MYSQL_SORT_BUFFER_SIZE (default: 256K)
  MYSQL_READ_BUFFER_SIZE (default: 8M or 5% of available memory)
  MYSQL_INNODB_BUFFER_POOL_SIZE (default: 32M or 50% of available memory)
  MYSQL_INNODB_LOG_FILE_SIZE (default: 8M or 15% of available memory)
  MYSQL_INNODB_LOG_BUFFER_SIZE (default: 8M or 15% of available memory)

For more information, see https://github.com/sclorg/mysql-container
[student@workstation ~]$ podman run --name mysql -d -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55  registry.redhat.io/rhel8/mysql-80:1
2945d6aa479b1190c4bcabfa559059defe11794b398e1899acf9527aed01b0a4
[student@workstation ~]$ podman ps -a
CONTAINER ID  IMAGE                                COMMAND     CREATED        STATUS                    PORTS       NAMES
1004d03199c9  registry.redhat.io/rhel8/mysql-80:1  run-mysqld  8 minutes ago  Exited (1) 8 minutes ago              mysql-db
2945d6aa479b  registry.redhat.io/rhel8/mysql-80:1  run-mysqld  6 seconds ago  Up 7 seconds ago                      mysql
[student@workstation ~]$ podman ps 
CONTAINER ID  IMAGE                                COMMAND     CREATED         STATUS             PORTS       NAMES
2945d6aa479b  registry.redhat.io/rhel8/mysql-80:1  run-mysqld  12 seconds ago  Up 12 seconds ago              mysql
[student@workstation ~]$ podman cp ~/DO180/labs/manage-lifecycle/db.sql mysql:/
[student@workstation ~]$ cat DO180/labs/manage-lifecycle/db.sql 
CREATE TABLE `Projects` (id int(11) NOT NULL, `name` varchar(255) DEFAULT NULL, `code` varchar(255) DEFAULT NULL, PRIMARY KEY (id));
insert into `Projects` (`id`, `name`, `code`) values (1,'DevOps','DO180');
[student@workstation ~]$ 
[student@workstation ~]$ podman exec mysql /bin/bash -c 'mysql -uuser1 -pmypa55 items < /db.sql'
mysql: [Warning] Using a password on the command line interface can be insecure.
[student@workstation ~]$ podman run --name mysql-2 -it registry.redhat.io/rhel8/mysql-80:1 /bin/bash
bash-4.4$ mysql -uroot
ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock' (2)
bash-4.4$ exit
exit
[student@workstation ~]$ podman ps -a
CONTAINER ID  IMAGE                                COMMAND     CREATED         STATUS                         PORTS       NAMES
1004d03199c9  registry.redhat.io/rhel8/mysql-80:1  run-mysqld  16 minutes ago  Exited (1) 16 minutes ago                  mysql-db
2945d6aa479b  registry.redhat.io/rhel8/mysql-80:1  run-mysqld  7 minutes ago   Up 7 minutes ago                           mysql
913c1f90aa08  registry.redhat.io/rhel8/mysql-80:1  /bin/bash   3 minutes ago   Exited (1) About a minute ago              mysql-2
[student@workstation ~]$ podman exec mysql /bin/bash -c 'mysql -uuser1 -pmypa55 -e "select * from items.Projects;"'
mysql: [Warning] Using a password on the command line interface can be insecure.
id	name	code
1	DevOps	DO180
[student@workstation ~]$ lab manage-lifecycle finish

Completing the Guided Excercise: Managing a MySQL Container

 · Stopping 'mysql' container..................................  SUCCESS
 · Stopping 'mysql-2' container................................  SUCCESS
 · Removing 'mysql' container..................................  SUCCESS
 · Removing 'mysql-2' container................................  SUCCESS
 · Removing 'mysql-db' container...............................  SUCCESS
 · Removing 'registry.redhat.io/rhel8/mysql-80:1' image........  SUCCESS
 · Removing the project directory..............................  SUCCESS
 · Removing the solution directory.............................  SUCCESS
[student@workstation ~]$ 

--------------------------------------Create MySQL Container with Persistent
Database-------------

[student@workstation ~]$ lab manage-storage start

Setting up workstation for the Guided Exercise: Persisting a MySQL Database

 · Checking podman configuration...............................  SUCCESS
 · Check if the directory used by lab is not created...........  SUCCESS
[student@workstation ~]$ mkdir -vp /home/student/local/mysql
mkdir: created directory '/home/student/local/mysql'
[student@workstation ~]$ sudo semanage fcontext -a -t container_file_t '/home/student/local/mysql(/.*)?'
ValueError: File context for /home/student/local/mysql(/.*)? already defined
[student@workstation ~]$ sudo restorecon -R /home/student/local/mysql
[student@workstation ~]$ ls -ldZ /home/student/local/mysql
drwxrwxr-x. 2 student student unconfined_u:object_r:container_file_t:s0 6 Oct  6 12:43 /home/student/local/mysql
[student@workstation ~]$ podman unshare chown 27:27 /home/student/local/mysql
[student@workstation ~]$ podman login registry.redhat.io
Username: veeraabose
Password: 
Login Succeeded!
[student@workstation ~]$ podman pull registry.redhat.io/rhel8/mysql-80:1
Trying to pull registry.redhat.io/rhel8/mysql-80:1...
Getting image source signatures
Checking if image destination supports signatures
Copying blob 36bead343ed7 done  
Copying blob 809fe483e885 done  
Copying blob 1770f4614fe5 done  
Copying blob 1b3417e31a5e done  
Copying config b5b0298033 done  
Writing manifest to image destination
Storing signatures
b5b0298033611d0c00b66d8664f60997908e9b8ec0e131a5a124783879951bf2
[student@workstation ~]$ podman images
REPOSITORY                         TAG         IMAGE ID      CREATED     SIZE
registry.redhat.io/rhel8/mysql-80  1           b5b029803361  2 days ago  624 MB
[student@workstation ~]$ podman run --name persist-db -d -v /home/student/local/mysql:/var/lib/mysql/data -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 registry.redhat.io/rhel8/mysql-80:1
8d709d45239b043b104a4c137de4bdfaf5470ab7c4755cfc73d7073eb841491f
[student@workstation ~]$ podman ps
CONTAINER ID  IMAGE                                COMMAND     CREATED        STATUS            PORTS       NAMES
8d709d45239b  registry.redhat.io/rhel8/mysql-80:1  run-mysqld  8 seconds ago  Up 8 seconds ago              persist-db
[student@workstation ~]$ podman ps --format="{{.ID}} {{.Names}} {{.Status}}"
8d709d45239b persist-db Up 38 seconds ago
[student@workstation ~]$ ls -ld /home/student/local/mysql/items
drwxr-x---. 2 100026 100026 6 Oct  6 12:49 /home/student/local/mysql/items
[student@workstation ~]$ date
Thu Oct  6 12:50:38 EDT 2022
[student@workstation ~]$ lab manage-storage finish

Completing the Guided Exercise: Persisting a MySQL Database

 · Stopping 'persist-db' container.............................  SUCCESS
 · Removing 'persist-db' container.............................  SUCCESS
 · Removing the 'registry.redhat.io/rhel8/mysql-80:1' image....  SUCCESS
 · Removing the /home/student/local/mysql directory............  SUCCESS
 · Removing the fcontext for /home/student/local/mysql.........  SUCCESS
[student@workstation ~]$ 

----------------------------------------GE--Loading the Database------------------------

[student@workstation ~]$ lab manage-networking start

Setting up workstation for the Guided Exercise: Loading the Database

 · Checking podman configuration...............................  SUCCESS
 · Creating a host directory for the database container:
   · Adding fcontext policy for /home/student/local/mysql......  SUCCESS
   · Creating the /home/student/local/mysql directory..........  SUCCESS
   · Apply fcontext policy to /home/student/local/mysql........  SUCCESS
   · Change owner of the /home/student/local/mysql to the mysql  SUCCESS
 · Downloading starter project.................................  SUCCESS
 · Downloading solution project................................  SUCCESS

Setup successful. Please proceed with the exercise.


[student@workstation ~]$ podman login registry.redhat.io
Authenticating with existing credentials for registry.redhat.io
Existing credentials are valid. Already logged in to registry.redhat.io
[student@workstation ~]$ podman run --name mysqldb-port -d -v /home/student/local/mysql:/var/lib/mysql/data -p 13306:3306 -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 registry.redhat.io/rhel8/mysql-80:1
Trying to pull registry.redhat.io/rhel8/mysql-80:1...
Getting image source signatures
Checking if image destination supports signatures
Copying blob 809fe483e885 done  
Copying blob 36bead343ed7 done  
Copying blob 1770f4614fe5 done  
Copying blob 1b3417e31a5e done  
Copying config b5b0298033 done  
Writing manifest to image destination
Storing signatures
3c57290e0e84e99143d43483353dd46fea2837ba7247172fe179ef795bab4bf1
[student@workstation ~]$ podman ps
CONTAINER ID  IMAGE                                COMMAND     CREATED         STATUS             PORTS                    NAMES
3c57290e0e84  registry.redhat.io/rhel8/mysql-80:1  run-mysqld  29 seconds ago  Up 29 seconds ago  0.0.0.0:13306->3306/tcp  mysqldb-port
[student@workstation ~]$ 0.0.0.0:13306->3306/tcp  mysqldb-port
bash: 3306/tcp: No such file or directory
[student@workstation ~]$ podman ps --format="{{.ID}} {{.Names}} {{.Ports}}"
3c57290e0e84 mysqldb-port 0.0.0.0:13306->3306/tcp
[student@workstation ~]$ mysql -uuser1 -h 127.0.0.1 -pmypa55 -P13306 items < /home/student/DO180/labs/manage-networking/db.sql
mysql: [Warning] Using a password on the command line interface can be insecure.
[student@workstation ~]$ podman exec -it mysqldb-port mysql -uroot items -e "SELECT * FROM Item"
+----+-------------------+------+
| id | description       | done |
+----+-------------------+------+
|  1 | Pick up newspaper |    0 |
|  2 | Buy groceries     |    1 |
+----+-------------------+------+
[student@workstation ~]$ cat /home/student/DO180/labs/manage-networking/db.sql 
CREATE TABLE `Item` (`id` BIGINT not null auto_increment primary key, `description` VARCHAR(100), `done` INT);
INSERT INTO `Item` (`id`,`description`,`done`) VALUES (1,'Pick up newspaper', 0);
INSERT INTO `Item` (`id`,`description`,`done`) VALUES (2,'Buy groceries', 1);
[student@workstation ~]$ mysql -uuser1 -h 127.0.0.1 -pmypa55 -P13306 items -e "SELECT * FROM Item"
mysql: [Warning] Using a password on the command line interface can be insecure.
+----+-------------------+------+
| id | description       | done |
+----+-------------------+------+
|  1 | Pick up newspaper |    0 |
|  2 | Buy groceries     |    1 |
+----+-------------------+------+
[student@workstation ~]$ podman exec -it mysqldb-port /bin/bash
bash-4.4$ mysql -uroot items -e "SELECT * FROM Item"
+----+-------------------+------+
| id | description       | done |
+----+-------------------+------+
|  1 | Pick up newspaper |    0 |
|  2 | Buy groceries     |    1 |
+----+-------------------+------+
bash-4.4$ exit
exit
[student@workstation ~]$ lab manage-networking finish

Completing the Guided Exercise: Loading the Database

 · Stopping the 'mysqldb-port' container.......................  SUCCESS
 · Removing the 'mysqldb-port' container.......................  SUCCESS
 · Removing the 'registry.redhat.io/rhel8/mysql-80:1' image....  SUCCESS
 · Removing the /home/student/local/mysql directory............  SUCCESS
 · Removing the fcontext for /home/student/local/mysql.........  SUCCESS

-------------------------------------------LAB: Managing Containers -----------------------------------------
[student@workstation ~]$ lab manage-review start

Setting up workstation for the Lab: Managing Containers

 · Checking podman configuration...............................  SUCCESS
 · Check that /home/student/local/mysql does not exist.........  SUCCESS
 · Downloading starter project.................................  SUCCESS
 · Downloading solution project................................  SUCCESS

Setup successful. Please proceed with the exercise.

[student@workstation ~]$ mkdir -vp /home/student/local/mysql
mkdir: created directory '/home/student/local/mysql'
[student@workstation ~]$ sudo semanage fcontext -a -t container_file_t  '/home/student/local/mysql(/.*)?'
[student@workstation ~]$ sudo restorecon -R /home/student/local/mysql
[student@workstation ~]$ podman unshare chown -Rv 27:27 /home/student/local/mysql
changed ownership of '/home/student/local/mysql' from root:root to 27:27
[student@workstation ~]$ podman login registry.redhat.io
Authenticating with existing credentials for registry.redhat.io
Existing credentials are valid. Already logged in to registry.redhat.io
[student@workstation ~]$ podman run --name mysql-1 -p 13306:3306 -d -v /home/student/local/mysql:/var/lib/mysql/data -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 registry.redhat.io/rhel8/mysql-80:1
Trying to pull registry.redhat.io/rhel8/mysql-80:1...
Getting image source signatures
Checking if image destination supports signatures
Copying blob 1b3417e31a5e done  
Copying blob 36bead343ed7 done  
Copying blob 809fe483e885 done  
Copying blob 1770f4614fe5 done  
Copying config b5b0298033 done  
Writing manifest to image destination
Storing signatures
de4c7277c799b456434e155757da10f5d42ccb9e5bff629791edc9da842496a1
[student@workstation ~]$ podman ps --format="{{.ID}} {{.Names}}"
de4c7277c799 mysql-1
[student@workstation ~]$ mysql -uuser1 -h 127.0.0.1 -pmypa55 -P13306 items < /home/student/DO180/labs/manage-review/db.sql
mysql: [Warning] Using a password on the command line interface can be insecure.
[student@workstation ~]$ podman ps
CONTAINER ID  IMAGE                                COMMAND     CREATED        STATUS            PORTS                    NAMES
de4c7277c799  registry.redhat.io/rhel8/mysql-80:1  run-mysqld  2 minutes ago  Up 2 minutes ago  0.0.0.0:13306->3306/tcp  mysql-1
[student@workstation ~]$ mysql -uuser1 -h 127.0.0.1 -pmypa55 -P13306 items -e "SELECT * FROM Item"
mysql: [Warning] Using a password on the command line interface can be insecure.
+----+-------------------+------+
| id | description       | done |
+----+-------------------+------+
|  1 | Pick up newspaper |    0 |
|  2 | Buy groceries     |    1 |
+----+-------------------+------+
[student@workstation ~]$ podman stop mysql-1
mysql-1
[student@workstation ~]$ podman ps -a
CONTAINER ID  IMAGE                                COMMAND     CREATED        STATUS                    PORTS                    NAMES
de4c7277c799  registry.redhat.io/rhel8/mysql-80:1  run-mysqld  3 minutes ago  Exited (0) 6 seconds ago  0.0.0.0:13306->3306/tcp  mysql-1
[student@workstation ~]$ podman run --name mysql-2 -p 13306:3306 -d -v /home/student/local/mysql:/var/lib/mysql/data -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 registry.redhat.io/rhel8/mysql-80:1
481659683cd858b8d285dacec55cc132ea6e056d736a997669596862c930a142
[student@workstation ~]$ podman ps --format="{{.ID}} {{.Names}}"
481659683cd8 mysql-2
[student@workstation ~]$ podman ps -a > /tmp/my-containers
[student@workstation ~]$ cat /tmp/my-containers 
CONTAINER ID  IMAGE                                COMMAND     CREATED         STATUS                    PORTS                    NAMES
de4c7277c799  registry.redhat.io/rhel8/mysql-80:1  run-mysqld  6 minutes ago   Exited (0) 2 minutes ago  0.0.0.0:13306->3306/tcp  mysql-1
481659683cd8  registry.redhat.io/rhel8/mysql-80:1  run-mysqld  40 seconds ago  Up 40 seconds ago         0.0.0.0:13306->3306/tcp  mysql-2
[student@workstation ~]$ podman exec -it mysql-2 /bin/bash
bash-4.4$ mysql -uroot
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 8
Server version: 8.0.26 Source distribution

Copyright (c) 2000, 2021, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| items              |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.00 sec)

mysql> USE items;
Database changed
mysql> SHOW TABLES;
+-----------------+
| Tables_in_items |
+-----------------+
| Item            |
+-----------------+
1 row in set (0.00 sec)

mysql> SELECT * FROM Item;
+----+-------------------+------+
| id | description       | done |
+----+-------------------+------+
|  1 | Pick up newspaper |    0 |
|  2 | Buy groceries     |    1 |
+----+-------------------+------+
2 rows in set (0.00 sec)

mysql> exit
Bye
bash-4.4$ exit
exit
[student@workstation ~]$ mysql -uuser1 -h workstation.lab.example.com -pmypa55 -P13306 items
mysql: [Warning] Using a password on the command line interface can be insecure.
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 9
Server version: 8.0.26 Source distribution

Copyright (c) 2000, 2021, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> INSERT INTO Item (description, done) VALUES ('Finished lab', 1);
Query OK, 1 row affected (0.02 sec)

mysql> SELECT * from Item;
+----+-------------------+------+
| id | description       | done |
+----+-------------------+------+
|  1 | Pick up newspaper |    0 |
|  2 | Buy groceries     |    1 |
|  3 | Finished lab      |    1 |
+----+-------------------+------+
3 rows in set (0.01 sec)

mysql> exit
Bye
[student@workstation ~]$ podman rm mysql-1
de4c7277c799b456434e155757da10f5d42ccb9e5bff629791edc9da842496a1
[student@workstation ~]$ lab manage-review grade

Grading the student's work for the Lab: Managing Containers

 · Checking if the /home/student/local/mysql folder exists.....  PASS
 · Checking if owner was changed...............................  PASS
 · Checking if the container mysql-1 was created...............  PASS
 · Checking if the mysql-2 container is running................  PASS
 · Checking tables for the 'Finished lab' row..................  PASS
[student@workstation ~]$ lab manage-review finish

Completing the Lab: Managing Containers

 · Removing the /home/student/local/mysql folder...............  SUCCESS
 · Removing the fcontext for /home/student/local/mysql.........  SUCCESS
 · Stopping mysql-1 container..................................  SUCCESS
 · Removing mysql-1 container..................................  SUCCESS
 · Stopping mysql-2 container..................................  SUCCESS
 · Removing mysql-2 container..................................  SUCCESS
 · Removing MySQL container image..............................  SUCCESS
 · Removing temporary file.....................................  SUCCESS
 · Removing the project directory..............................  SUCCESS
 · Removing the solution directory.............................  SUCCESS
[student@workstation ~]$ 

Summary
-----------
In this chapter, you learned:
• Podman has subcommands to: create a new container (run), delete a container (rm), list
containers (ps), stop a container (stop), and start a process in a container (exec).
• Default container storage is ephemeral, meaning its contents are not present after the container
is removed.
• Containers can use a folder from the host file system to work with persistent data.
• Podman mounts volumes in a container with the -v option in the podman run command.
• The podman exec command starts an additional process inside a running container.
• Podman maps local ports to container ports by using the -p option in the run subcommand.

-----------------------Chapter 4 -----------------------------------------------

[student@workstation ~]$ lab image-operations start

Setting up workstation for the GE: Creating a Custom Apache Container Image

 · Checking podman configuration...............................  SUCCESS
[student@workstation ~]$ podman login quay.io
Username: veeraabose
Password: 
Login Succeeded!
[student@workstation ~]$ podman run -d --name official-httpd -p 8180:80 quay.io/redhattraining/httpd-parent
Trying to pull quay.io/redhattraining/httpd-parent:latest...
Getting image source signatures
Copying blob a3ed95caeb02 done  
Copying blob a3ed95caeb02 done  
Copying blob a3ed95caeb02 done  
Copying blob 787f47dbeaac done  
Copying blob 6a5240d60dc4 done  
Copying blob 08b8c9fdec44 done  
Copying blob a3ed95caeb02 skipped: already exists  
Copying blob a3ed95caeb02 skipped: already exists  
Copying blob a3ed95caeb02 skipped: already exists  
Copying blob 408208567b9a done  
Writing manifest to image destination
Storing signatures
43effcd465811d1388d84ced5f0be49f6d771e13ba624564b16e065865252fb1
[student@workstation ~]$ podman exec -it official-httpd /bin/bash
bash-4.4# cat /var/www/html/index.html 
Hello from the httpd-parent container!
bash-4.4# echo "DO180 Page" > /var/www/html/do180.html
bash-4.4# exit
exit
[student@workstation ~]$ curl 127.0.0.1:8180/do180.html
DO180 Page
[student@workstation ~]$ podman diff official-httpd
C /root
A /root/.bash_history
C /run/httpd
A /run/httpd/cgisock.1
A /run/httpd/httpd.pid
C /tmp
C /var
C /var/log
C /var/log/httpd
A /var/log/httpd/access_log
A /var/log/httpd/error_log
C /var/www
C /var/www/html
A /var/www/html/do180.html
[student@workstation ~]$ podman stop official-httpd
official-httpd
[student@workstation ~]$ podman commit -a 'veera' official-httpd do180-custom-httpd
Getting image source signatures
Copying blob 24d85c895b6b skipped: already exists  
Copying blob c613b100be16 skipped: already exists  
Copying blob 574bcc187eda skipped: already exists  
Copying blob 7f9108fde4a1 skipped: already exists  
Copying blob bad01b4b4478 done  
Copying config 779652b5b0 done  
Writing manifest to image destination
Storing signatures
779652b5b0978db3e5b76df85b864d72cfc3c524cbecbc43de7d3af4f74ffb6d
[student@workstation ~]$ podman images
REPOSITORY                           TAG         IMAGE ID      CREATED         SIZE
localhost/do180-custom-httpd         latest      779652b5b097  43 seconds ago  236 MB
quay.io/redhattraining/httpd-parent  latest      4346d3cace25  3 years ago     236 MB
[student@workstation ~]$ podman ps -a
CONTAINER ID  IMAGE                                       COMMAND               CREATED        STATUS                    PORTS                 NAMES
43effcd46581  quay.io/redhattraining/httpd-parent:latest  /bin/sh -c /usr/s...  6 minutes ago  Exited (0) 2 minutes ago  0.0.0.0:8180->80/tcp  official-httpd
[student@workstation ~]$ source /usr/local/etc/ocp4.config
[student@workstation ~]$ cat !$
cat /usr/local/etc/ocp4.config
RHT_OCP4_MASTER_API=https://api.ocp4.example.com:6443
RHT_OCP4_WILDCARD_DOMAIN=apps.ocp4.example.com
RHT_OCP4_NEXUS_SERVER=nexus-common.apps.ocp4.example.com
RHT_OCP4_DEV_USER=developer
RHT_OCP4_DEV_PASSWORD=developer
RHT_OCP4_GITHUB_USER=veerabose
RHT_OCP4_QUAY_USER=veeraabose
RHT_OCP4_USER_PASSWD=redhat
[student@workstation ~]$ podman push quay.io/${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
Error: quay.io/veeraabose/do180-custom-httpd:v1.0: image not known
[student@workstation ~]$ podman tag do180-custom-httpd quay.io/${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
[student@workstation ~]$ podman images
REPOSITORY                             TAG         IMAGE ID      CREATED        SIZE
localhost/do180-custom-httpd           latest      779652b5b097  5 minutes ago  236 MB
quay.io/veeraabose/do180-custom-httpd  v1.0        779652b5b097  5 minutes ago  236 MB
quay.io/redhattraining/httpd-parent    latest      4346d3cace25  3 years ago    236 MB
[student@workstation ~]$ podman push quay.io/${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
Getting image source signatures
Copying blob bad01b4b4478 done  
Copying blob 24d85c895b6b skipped: already exists  
Copying blob c613b100be16 skipped: already exists  
Copying blob 574bcc187eda skipped: already exists  
Copying blob 7f9108fde4a1 skipped: already exists  
Copying config 779652b5b0 done  
Writing manifest to image destination
Storing signatures
[student@workstation ~]$ podman pull -q quay.io/${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
779652b5b0978db3e5b76df85b864d72cfc3c524cbecbc43de7d3af4f74ffb6d
[student@workstation ~]$ podman images
REPOSITORY                             TAG         IMAGE ID      CREATED        SIZE
quay.io/veeraabose/do180-custom-httpd  v1.0        779652b5b097  9 minutes ago  236 MB
localhost/do180-custom-httpd           latest      779652b5b097  9 minutes ago  236 MB
quay.io/redhattraining/httpd-parent    latest      4346d3cace25  3 years ago    236 MB
[student@workstation ~]$ podman run -d --name test-httpd -p 8280:80  ${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
ef3916ac3ff7889fa60b1ceb5f9e290e959006f2ade53372017e79443813da31
[student@workstation ~]$ curl http://localhost:8280/do180.html
DO180 Page
[student@workstation ~]$ lab image-operations finish

Completing the GE: Creating a Custom Apache Container Image

 · Stopping official-httpd container...........................  SUCCESS
 · Removing official-httpd container...........................  SUCCESS
 · Stopping test-httpd container...............................  SUCCESS
 · Removing test-httpd container...............................  SUCCESS
 · Removing redhattraining/httpd-parent image..................  SUCCESS
 · Removing quay.io/veeraabose/do180-custom-httpd image........  SUCCESS
 · Removing localhost/do180-custom-httpd image.................  SUCCESS
[student@workstation ~]$ 


-----------------Ch4 - Lab ----------------------------------------------------------
[student@workstation ~]$ lab image-review start

Setting up workstation for the Lab: Managing Images

 · Checking podman configuration...............................  SUCCESS
[student@workstation ~]$ podman pull quay.io/redhattraining/nginx:1.17
Trying to pull quay.io/redhattraining/nginx:1.17...
Getting image source signatures
Copying blob b00ee4473ca6 skipped: already exists  
Copying blob d1a81ca518e2 skipped: already exists  
Copying blob c78335199707 skipped: already exists  
Copying config 9beeba249f done  
Writing manifest to image destination
Storing signatures
9beeba249f3ee158d3e495a6ac25c5667ae2de8a43ac2a8bfd2bf687a58c06c9
[student@workstation ~]$ podman images
REPOSITORY                    TAG         IMAGE ID      CREATED      SIZE
quay.io/redhattraining/nginx  1.17        9beeba249f3e  2 years ago  131 MB
[student@workstation ~]$ podman run --name official-nginx -d -p 8080:80 quay.io/redhattraining/nginx:1.17
Error: error creating container storage: the container name "official-nginx" is already in use by "38bb58ad3f8734d4fcaac03d5620d7ae567db6fc1f76de378f94f8ce68498dd1". You have to remove that container to be able to reuse that name.: that name is already in use
[student@workstation ~]$ podman rm -f official-nginx 
38bb58ad3f8734d4fcaac03d5620d7ae567db6fc1f76de378f94f8ce68498dd1
[student@workstation ~]$ podman run --name official-nginx -d -p 8080:80 quay.io/redhattraining/nginx:1.17
24acad6eb003f0885651d33b353021d3453e2a6debb034b92f08e29a55264718
[student@workstation ~]$ podman exec -it official-nginx /bin/bash
root@24acad6eb003:/# cat /usr/share/nginx/html/index.html 
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
root@24acad6eb003:/# echo 'DO180' > /usr/share/nginx/html/index.html
root@24acad6eb003:/# cat /usr/share/nginx/html/index.html 
DO180
root@24acad6eb003:/# exit
exit
[student@workstation ~]$ curl 127.0.0.1:8080
DO180
[student@workstation ~]$ podman stop official-nginx
official-nginx
[student@workstation ~]$ podman commit -a 'veera' official-nginx do180/mynginx:v1.0-SNAPSHOT
Getting image source signatures
Copying blob ffc9b21953f4 skipped: already exists  
Copying blob 2f4accd375d9 skipped: already exists  
Copying blob 6c7de695ede3 skipped: already exists  
Copying blob fefe293d37ac done  
Copying config b6710f5af7 done  
Writing manifest to image destination
Storing signatures
b6710f5af796b1d886012872824d28b3e07891dae7c72113d7592a26bb0866b1
[student@workstation ~]$ podman images
REPOSITORY                    TAG            IMAGE ID      CREATED         SIZE
localhost/do180/mynginx       v1.0-SNAPSHOT  b6710f5af796  28 seconds ago  131 MB
quay.io/redhattraining/nginx  1.17           9beeba249f3e  2 years ago     131 MB
[student@workstation ~]$ podman run --name official-nginx-dev -d -p 8080:80 do180/mynginx:v1.0-SNAPSHOT
b1b288b3eeec628bc5ea8155e059380c08b6e6dcfac0e2dc063fde9748e73526
[student@workstation ~]$ podman ps
CONTAINER ID  IMAGE                                  COMMAND               CREATED        STATUS            PORTS                 NAMES
b1b288b3eeec  localhost/do180/mynginx:v1.0-SNAPSHOT  nginx -g daemon o...  7 seconds ago  Up 8 seconds ago  0.0.0.0:8080->80/tcp  official-nginx-dev
[student@workstation ~]$ podman exec -it official-nginx-dev /bin/bash
root@b1b288b3eeec:/# cat /usr/share/nginx/html/index.html 
DO180
root@b1b288b3eeec:/# echo 'DO180 Page' > /usr/share/nginx/html/index.html
root@b1b288b3eeec:/# exit
exit
[student@workstation ~]$ podman stop official-nginx-dev
official-nginx-dev
[student@workstation ~]$ podman commit -a 'veera' official-nginx-dev do180/mynginx:v1.0
Getting image source signatures
Copying blob ffc9b21953f4 skipped: already exists  
Copying blob 2f4accd375d9 skipped: already exists  
Copying blob 6c7de695ede3 skipped: already exists  
Copying blob fefe293d37ac skipped: already exists  
Copying blob aaf4fa91f1ff done  
Copying config 9f4c6deb97 done  
Writing manifest to image destination
Storing signatures
9f4c6deb9792a13f121da1a44a259612d635090fd3835070fdee8a0a1e4588a5
[student@workstation ~]$ podman images
REPOSITORY                    TAG            IMAGE ID      CREATED         SIZE
localhost/do180/mynginx       v1.0           9f4c6deb9792  26 seconds ago  131 MB
localhost/do180/mynginx       v1.0-SNAPSHOT  b6710f5af796  7 minutes ago   131 MB
quay.io/redhattraining/nginx  1.17           9beeba249f3e  2 years ago     131 MB
[student@workstation ~]$ podman ps -a --format="{{.ID}} {{.Names}} {{.Status}}"
24acad6eb003 official-nginx Exited (0) 9 minutes ago
b1b288b3eeec official-nginx-dev Exited (0) About a minute ago
[student@workstation ~]$ podman rm official-nginx-dev
b1b288b3eeec628bc5ea8155e059380c08b6e6dcfac0e2dc063fde9748e73526
[student@workstation ~]$ podman ps -a --format="{{.ID}} {{.Names}} {{.Status}}"
24acad6eb003 official-nginx Exited (0) 9 minutes ago
[student@workstation ~]$ podman rmi do180/mynginx:v1.0-SNAPSHOT
Untagged: localhost/do180/mynginx:v1.0-SNAPSHOT
[student@workstation ~]$ podman images
REPOSITORY                    TAG         IMAGE ID      CREATED        SIZE
localhost/do180/mynginx       v1.0        9f4c6deb9792  2 minutes ago  131 MB
quay.io/redhattraining/nginx  1.17        9beeba249f3e  2 years ago    131 MB
[student@workstation ~]$ podman run -d --name my-nginx -p 8280:80 do180/mynginx:v1.0
66246ea705e0b8cb1f42199ea302f0b8f081c9446b18a4a51195d7c4a2fed8fa
[student@workstation ~]$ curl 127.0.0.1:8280
DO180 Page
[student@workstation ~]$ lab image-review grade

Grading the student's work for the Lab: Managing Images

 · Nginx container image is pulled.............................  PASS
 · Container official-nginx is created.........................  PASS
 · Container official-nginx is stopped.........................  PASS
 · Tag do180/mynginx:v1.0-SNAPSHOT is removed..................  PASS
 · Tag do180/mynginx:v1.0 is created...........................  PASS
 · Container my-nginx is created and running...................  PASS
 · index.html is available with the custom content.............  PASS
[student@workstation ~]$ lab image-review finish

Completing the Lab: Managing Images

 · Stopping official-nginx-dev container.......................  SUCCESS
 · Removing official-nginx-dev container.......................  SUCCESS
 · Stopping official-nginx container...........................  SUCCESS
 · Removing official-nginx container...........................  SUCCESS
 · Removing do180/mynginx:v1.0 image...........................  SUCCESS
 · Removing quay.io/redhattraining/nginx:1.17 image............  SUCCESS
[student@workstation ~]$ 

Summary
In this chapter, you learned:
.• The Red Hat Container Catalog provides tested and certified images at registry.redhat.io.
• Podman can interact with remote container registries to search, pull, and push container images.
• Image tags are a mechanism to support multiple releases of a container image.
• Podman provides commands to manage container images both in local storage and as
compressed files.
• Use the podman commit command to create an image from a container.

